<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="KCFINALMAC (1)" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field3ee777be">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field7fd47ca9">
	</Field>
	<Field name="RR" type="required" numBits="16" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field1d425457">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" id="module.Register76abb20" />
	<Register name="AR" width="12" id="module.Register5f9f3d22" />
	<Register name="DR" width="16" id="module.Register34f0b96a" />
	<Register name="E" width="16" id="module.Registereb6e0cf" />
	<Register name="FGI" width="1" id="module.Register5cd7e982" />
	<Register name="FGO" width="1" id="module.Register7a07a917" />
	<Register name="I" width="1" id="module.Register4b0d74d4" />
	<Register name="IEN" width="1" id="module.Register720455e2" />
	<Register name="INPR" width="16" id="module.Register11fc29d9" />
	<Register name="IR" width="16" id="module.Register56f465e0" />
	<Register name="OUTR" width="16" id="module.Register767f003e" />
	<Register name="PC" width="12" id="module.Register2604f056" />
	<Register name="S" width="1" id="module.Register56c6a7ae" />
	<Register name="T" width="1" id="module.Register236813f3" />
	<Register name="TR" width="16" id="module.Register2d189950" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-OUT" bit="0" register="module.Registereb6e0cf" halt="false" id="module.ConditionBit2c9f5ae5" />
	<ConditionBit name="HALT BIT" bit="0" register="module.Register56c6a7ae" halt="true" id="module.ConditionBit4f07730f" />

	<!--............. rams ..........................-->
	<RAM name="KC" length="4096" cellSize="16" id="module.RAM2c930697" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="module.Register76abb20" start="0" numBits="16" value="0" id="microinstruction.CpusimSet45a8c84c" />
	<Set name="E&lt;-0" register="module.Registereb6e0cf" start="0" numBits="1" value="0" id="microinstruction.CpusimSet1336ea6e" />
	<Set name="FGI&lt;-0" register="module.Register5cd7e982" start="0" numBits="1" value="0" id="microinstruction.CpusimSet67dd7c0c" />
	<Set name="FGO&lt;-0" register="module.Register7a07a917" start="0" numBits="1" value="0" id="microinstruction.CpusimSet53ce69de" />
	<Set name="IEN&lt;-0" register="module.Register720455e2" start="0" numBits="1" value="0" id="microinstruction.CpusimSet50a73143" />
	<Set name="IEN&lt;-1" register="module.Register720455e2" start="0" numBits="1" value="1" id="microinstruction.CpusimSet7466c4a3" />

	<!--............. test ..........................-->
	<Test name="if(AC!=0) Skip-1" register="module.Register76abb20" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test78d7fb3f" />
	<Test name="if(AC[15]!=0) Skip-1" register="module.Register76abb20" start="15" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test58f7ed62" />
	<Test name="if(AC[15]!=1) Skip-1" register="module.Register76abb20" start="15" numBits="1" comparison="NE" value="1" omission="1" id="microinstruction.Test31b3f216" />
	<Test name="if(DR!=0) Skip-1" register="module.Register34f0b96a" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test73327b5f" />
	<Test name="if(E!=0) Skip-1" register="module.Registereb6e0cf" start="0" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test34fb7805" />
	<Test name="if(FGI!=1) Skip-1" register="module.Register5cd7e982" start="0" numBits="1" comparison="NE" value="1" omission="1" id="microinstruction.Test53000f05" />
	<Test name="if(FGO!=0) Skip-1" register="module.Register7a07a917" start="0" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test7d0d7431" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="module.Register76abb20" delta="1" id="microinstruction.Increment1d05004c" />
	<Increment name="AR&lt;-AR+1" register="module.Register5f9f3d22" delta="1" id="microinstruction.Increment725168b9" />
	<Increment name="DR&lt;-DR+1" register="module.Register34f0b96a" delta="1" id="microinstruction.Increment21fa39d1" />
	<Increment name="PC&lt;-PC+1" register="module.Register2604f056" delta="1" id="microinstruction.Increment37c07d23" />

	<!--............. shift .........................-->
	<Shift name="shl AC" type="logical" source="module.Register76abb20" destination="module.Register76abb20" direction="left" distance="1" id="microinstruction.Shift2f21cf7" />
	<Shift name="shr AC" type="logical" source="module.Register76abb20" destination="module.Register76abb20" direction="right" distance="1" id="microinstruction.Shift7b1fa8b0" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="module.Register76abb20" source2="module.Register76abb20" destination="module.Register76abb20" id="microinstruction.Logicalb5b32b3" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="module.Register76abb20" source2="module.Register34f0b96a" destination="module.Register76abb20" id="microinstruction.Logical3f466f9e" />
	<Logical name="E&lt;-E'" type="NOT" source1="module.Registereb6e0cf" source2="module.Registereb6e0cf" destination="module.Registereb6e0cf" id="microinstruction.Logical2dc1c925" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="module.Register76abb20" source2="module.Register34f0b96a" destination="module.Register76abb20" id="microinstruction.Arithmetic2b9dbe05" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-T" source="module.Register236813f3" srcStartBit="0" dest="module.Register76abb20" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR7901df6f" />
	<TransferRtoR name="AC(15)&lt;-E" source="module.Registereb6e0cf" srcStartBit="0" dest="module.Register76abb20" destStartBit="15" numBits="1" id="microinstruction.TransferRtoR75b7754e" />
	<TransferRtoR name="AC&lt;-DR" source="module.Register34f0b96a" srcStartBit="0" dest="module.Register76abb20" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR561c023c" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="module.Register56f465e0" srcStartBit="0" dest="module.Register5f9f3d22" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR10b7e36c" />
	<TransferRtoR name="AR&lt;-PC" source="module.Register2604f056" srcStartBit="0" dest="module.Register5f9f3d22" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR673abcb2" />
	<TransferRtoR name="AR&lt;-TR(0-11)" source="module.Register2d189950" srcStartBit="4" dest="module.Register5f9f3d22" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR2969a81e" />
	<TransferRtoR name="E&lt;-AC(15)" source="module.Register76abb20" srcStartBit="15" dest="module.Registereb6e0cf" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR1f5242ed" />
	<TransferRtoR name="E&lt;-T" source="module.Register236813f3" srcStartBit="0" dest="module.Registereb6e0cf" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR30516ee8" />
	<TransferRtoR name="I&lt;-IR(3)" source="module.Register56f465e0" srcStartBit="3" dest="module.Register4b0d74d4" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR23c8b7c" />
	<TransferRtoR name="PC&lt;-AR" source="module.Register5f9f3d22" srcStartBit="0" dest="module.Register2604f056" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR6671fa7d" />
	<TransferRtoR name="T&lt;-AC(0)" source="module.Register76abb20" srcStartBit="0" dest="module.Register236813f3" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR6bb99974" />
	<TransferRtoR name="T&lt;-E" source="module.Registereb6e0cf" srcStartBit="0" dest="module.Register236813f3" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR50a48cc5" />
	<TransferRtoR name="TR&lt;-PC" source="module.Register2604f056" srcStartBit="0" dest="module.Register2d189950" destStartBit="4" numBits="12" id="microinstruction.TransferRtoR36259ac6" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR(0-3)" ir="module.Register56f465e0" id="microinstruction.Decode5f6e2c6d" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HLT" bit="module.ConditionBit4f07730f" value="1" id="microinstruction.SetCondBit783b7ccd" />

	<!--............. io ............................-->
	<IO name="AC(0-7)&lt;-INPR" direction="input" type="integer" buffer="module.Register76abb20" connection="[console]" id="microinstruction.IOc0d05ab" />
	<IO name="OUTR&lt;-AC(0-7)" direction="output" type="integer" buffer="module.Register76abb20" connection="[console]" id="microinstruction.IO16e45d46" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="module.RAM2c930697" data="module.Register34f0b96a" address="module.Register5f9f3d22" id="microinstruction.MemoryAccess384716b3" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="module.RAM2c930697" data="module.Register56f465e0" address="module.Register5f9f3d22" id="microinstruction.MemoryAccess1bb9c862" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="module.RAM2c930697" data="module.Register76abb20" address="module.Register5f9f3d22" id="microinstruction.MemoryAccess7ffda6e3" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="module.RAM2c930697" data="module.Register34f0b96a" address="module.Register5f9f3d22" id="microinstruction.MemoryAccess4bc7da37" />
	<MemoryAccess name="M[AR]&lt;-TR" direction="write" memory="module.RAM2c930697" data="module.Register2d189950" address="module.Register5f9f3d22" id="microinstruction.MemoryAccess4bb5bf72" />
	<MemoryAccess name="TR&lt;-M[AR]" direction="read" memory="module.RAM2c930697" data="module.Register2d189950" address="module.Register5f9f3d22" id="microinstruction.MemoryAccess1e1a94be" />

	<!--............. end ...........................-->
	<End id="microinstruction.Endcc2e320" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoR673abcb2" />
		<Microinstruction microRef="microinstruction.MemoryAccess1bb9c862" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.TransferRtoR10b7e36c" />
		<Microinstruction microRef="microinstruction.Decode5f6e2c6d" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ISZ_I" opcode="e" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR23c8b7c" />
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.Increment21fa39d1" />
		<Microinstruction microRef="microinstruction.MemoryAccess4bc7da37" />
		<Microinstruction microRef="microinstruction.Test73327b5f" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="d" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR23c8b7c" />
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.TransferRtoR36259ac6" />
		<Microinstruction microRef="microinstruction.MemoryAccess4bb5bf72" />
		<Microinstruction microRef="microinstruction.Increment725168b9" />
		<Microinstruction microRef="microinstruction.TransferRtoR6671fa7d" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR23c8b7c" />
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.TransferRtoR6671fa7d" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.MemoryAccess7ffda6e3" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR23c8b7c" />
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.TransferRtoR561c023c" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR23c8b7c" />
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.Arithmetic2b9dbe05" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR23c8b7c" />
		<Microinstruction microRef="microinstruction.MemoryAccess1e1a94be" />
		<Microinstruction microRef="microinstruction.TransferRtoR2969a81e" />
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.Logical3f466f9e" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.Increment21fa39d1" />
		<Microinstruction microRef="microinstruction.MemoryAccess4bc7da37" />
		<Microinstruction microRef="microinstruction.Test73327b5f" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR36259ac6" />
		<Microinstruction microRef="microinstruction.MemoryAccess4bb5bf72" />
		<Microinstruction microRef="microinstruction.Increment725168b9" />
		<Microinstruction microRef="microinstruction.TransferRtoR6671fa7d" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.TransferRtoR6671fa7d" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess7ffda6e3" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.TransferRtoR561c023c" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.Arithmetic2b9dbe05" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess384716b3" />
		<Microinstruction microRef="microinstruction.Logical3f466f9e" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" format="RR" >
		<Microinstruction microRef="microinstruction.IO16e45d46" />
		<Microinstruction microRef="microinstruction.CpusimSet53ce69de" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" format="RR" >
		<Microinstruction microRef="microinstruction.IOc0d05ab" />
		<Microinstruction microRef="microinstruction.CpusimSet67dd7c0c" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" format="RR" >
		<Microinstruction microRef="microinstruction.SetCondBit783b7ccd" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" format="RR" >
		<Microinstruction microRef="microinstruction.Test34fb7805" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" format="RR" >
		<Microinstruction microRef="microinstruction.Test78d7fb3f" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" format="RR" >
		<Microinstruction microRef="microinstruction.Test31b3f216" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" format="RR" >
		<Microinstruction microRef="microinstruction.Test58f7ed62" />
		<Microinstruction microRef="microinstruction.Increment37c07d23" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" format="RR" >
		<Microinstruction microRef="microinstruction.Increment1d05004c" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" format="RR" >
		<Microinstruction microRef="microinstruction.TransferRtoR6bb99974" />
		<Microinstruction microRef="microinstruction.Shift2f21cf7" />
		<Microinstruction microRef="microinstruction.TransferRtoR75b7754e" />
		<Microinstruction microRef="microinstruction.TransferRtoR30516ee8" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" format="RR" >
		<Microinstruction microRef="microinstruction.Logical2dc1c925" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" format="RR" >
		<Microinstruction microRef="microinstruction.Logicalb5b32b3" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" format="RR" >
		<Microinstruction microRef="microinstruction.CpusimSet1336ea6e" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" format="RR" >
		<Microinstruction microRef="microinstruction.CpusimSet45a8c84c" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" format="RR" >
		<Microinstruction microRef="microinstruction.TransferRtoR50a48cc5" />
		<Microinstruction microRef="microinstruction.TransferRtoR1f5242ed" />
		<Microinstruction microRef="microinstruction.Shift7b1fa8b0" />
		<Microinstruction microRef="microinstruction.TransferRtoR7901df6f" />
		<Microinstruction microRef="microinstruction.Endcc2e320" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM2c930697" startingAddress="0" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
		<RAMWindowInfo ram="module.RAM2c930697" cellSize="1" contentsbase="Hexadecimal" addressbase="Hexadecimal" 
			top="264" left="677" width="450" height="450" />
		<RegisterWindowInfo base="Decimal" 
			top="15" left="1485" width="300" height="335" />
	</ModuleWindowsInfo>

</Machine>
